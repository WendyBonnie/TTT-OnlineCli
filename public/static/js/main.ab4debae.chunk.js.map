{"version":3,"sources":["components/Inscription/Inscription.js","components/Connexion/Connexion.js","components/Profil/Profil.js","assets/components/Footer/Footer.js","components/HomePageClient/HomePageClient.js","assets/components/Cards/Cards.js","components/ListeServeurs/ListeServeurs.js","assets/components/Navbar/Navbar.js","assets/components/CheckoutForm/CheckoutForm.js","components/Payment/Payment.js","assets/components/DailyMenu/DailyMenu.js","components/Menu/Menu.js","components/PasswordRenew/PasswordRenew.js","components/PasswordReset/PasswordReset.js","components/Payment/Commentaire.js","components/Historique/Historique.js","components/modifierSonProfil/modifierSonProfil.js","components/TipCommun/TipCommun.js","components/TipCommun/TipCommun1.js","components/TipsIndividuel/tipsIndividuel.js","components/TipsIndividuel/tipsIndividuel1.js","components/MangoCards/MangoCards.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Inscription","props","handleInput","e","setState","target","name","value","addNewRegister","preventDefault","data","FormData","headers","Headers","fetch","method","body","then","response","json","responseObject","message","error","console","log","state","lastname","className","Container","Row","Col","xs","s","md","Form","onSubmit","this","Group","controlId","Control","type","placeholder","onChange","as","Check","label","required","href","Button","variant","block","Component","Connexion","change","loginClient","email","password","options","JSON","stringify","token","localStorage","setItem","userId","setLogin","history","push","window","location","search","buttonText","declineButtonText","expires","enableDeclineButton","onDecline","alert","cookieName","style","background","color","declineButtonStyle","borderRadius","padding","fontSize","fontWeight","buttonStyle","fontfamily","ClassName","id","to","onClick","Label","Client","click","pathname","postDataClient","Authorization","getItem","clientInfo","client","object","deleteClient","confirm","signOut","clear","historique","size","firstname","adress","phone","footer","deleteProfil","profil","modalDelete","Modal","show","showModal","onHide","Header","closeButton","Title","Body","Footer","Navbar","fixed","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","eventKey","src","HomePageClient","CardSection","Liste","getDataServeurs","serveur","pourboireGeneral","restaurantName","_id","display","pourboireIndividuel","tabServeur","map","element","index","fluid","Image","serveurPicture","serveurName","serveurMail","displayGeneral","BarreMenu","connect","login","Dropdown","alignRight","Menu","Item","stripePromise","loadStripe","CheckoutForm","app","event","a","stripe","redirectToCheckout","lineItems","price","quantity","mode","successUrl","cancelUrl","app1","app2","appChoice","amount","Number","Payment","Nocompte","DailyMenu","getDailyMenu","db","db1","menu","dailyMenu","picture","err","Card","Img","alt","PasswordRenew","passwordRenew","match","params","PasswordReset","passwordReset","Commentaires","addNewStatut","prenom","nom","texte","serveurId","commentaires","class","Historique","montant","Date","date","toLocaleDateString","waiter","Table","striped","hover","modifierMonProfil","editClient","gender","age","TipCommun","postInfoCard","Icon","useState","setShow","useRef","backgroundColor","borderColor","ref","Overlay","current","placement","Popover","textAlign","Content","MyVerticallyCenteredModal","useHistory","dataMango","parse","centered","backdrop","borderBlockColor","width","height","marginTop","axios","url","CardRegistrationURL","qs","cardRegistrationId","Id","accessKeyRef","AccessKey","PreregistrationData","cardNumber","cardExpirationDate","replace","cardCvx","result","data1","walletID","registrationData","result1","Type","border","TipCommun1","payin","getWalletId","ResultMessage","resultat","modal","TipIndividuel","protectionAmount","totalPreleve","useEffect","toFixed","emailServeur","TipIndividuel1","MangoCards","App","exact","path","render","component","Profil","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ab4debae.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n/*import FormControl from \"react-bootstrap/FormControl\";*/\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastname: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.target);\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/register\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bigBlocClient\">\r\n        <Container className=\"blocprincipalClient \">\r\n          <Row className=\"creerInscr\">\r\n            <Col className=\"colInscr\" xs={12} s={12} md={7}>\r\n              <h1 className=\"TitreInscription\">Créer mon compte </h1>\r\n              <p className=\"sous-titre\">\r\n                Merci de remplir les informations ci-dessous pour finaliser la\r\n                création de votre compte.\r\n              </p>\r\n              <Form onSubmit={this.addNewRegister}>\r\n                <Form.Group controlId=\"formName\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Nom\"\r\n                    name=\"lastname\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formFirstName\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Prénom\"\r\n                    name=\"firstname\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formEmail\">\r\n                  <Form.Control\r\n                    type=\"mail\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formPassword\">\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    name=\"password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGender\">\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    type=\"text\"\r\n                    name=\"gender\"\r\n                    onChange={this.handleInput}\r\n                  >\r\n                    <option>-</option>\r\n                    <option>Femme (facultatif)</option>\r\n                    <option>Homme (facultatif)</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formAdress\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ville\"\r\n                    name=\"adress\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPhone\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Téléphone\"\r\n                    name=\"phone\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formAge\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Age (facultatif)\"\r\n                    name=\"age\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    className=\"checkboxCGU\"\r\n                    type=\"checkbox\"\r\n                    name=\"acceptTTT\"\r\n                    label=\"J'accepte la réception de courriers électroniques et de SMS publicitaires de la part de Tipourboire\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                  <Form.Check\r\n                    className=\"checkboxCGU\"\r\n                    type=\"checkbox\"\r\n                    name=\"acceptTier\"\r\n                    label=\"J'accepte la réception de courriers électroniques et de SMS publicitaires de la part de tiers\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                  <Form.Check\r\n                    className=\"checkboxCGU\"\r\n                    type=\"checkbox\"\r\n                    name=\"acceptControl\"\r\n                    label=\"J'ai lu et j'accepte les CGU et CGV\"\r\n                    onChange={this.handleInput}\r\n                    required\r\n                  />\r\n                  <a\r\n                    className=\"cgvLink\"\r\n                    href=\"/CGV_TIPTOTHANK.pdf\"\r\n                    target=\"_blanck\"\r\n                  >\r\n                    CGU et CGV\r\n                  </a>\r\n                </Form.Group>\r\n                <Button\r\n                  className=\"buttonInscri\"\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  block\r\n                >\r\n                  S'inscrire\r\n                </Button>\r\n              </Form>\r\n\r\n              <p className=\"annonce\">\r\n                *TIPOURBOIRE est responsable du traitement des données\r\n                personnelles collectées sur ce site. Elles sont collectées aux\r\n                fins de : l'exécution du contrat/vous informer de nos nouveautés\r\n                et actualités/à des fins statistiques, les bases légales\r\n                respectives des traitements pouvant être l'exécution du contrat,\r\n                l'intérêt légitime, ou le consentement. Pour plus d'informations\r\n                voir notre politique de confidentialité.\r\n              </p>\r\n\r\n              <br />\r\n              <p>{this.state.message}</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CookieConsent, { Cookies } from \"react-cookie-consent\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: null, password: null };\r\n  }\r\n\r\n  change = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  loginClient = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.setState({ message: responseObject.message });\r\n\r\n          if (responseObject.token) {\r\n            localStorage.setItem(\"token\", responseObject.token);\r\n            localStorage.setItem(\"userID\", responseObject.userId);\r\n            this.props.setLogin(true);\r\n            this.props.history.push(\"/Profil\" + window.location.search);\r\n          }\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion-container\">\r\n        <CookieConsent\r\n          location=\"top\"\r\n          buttonText=\"J'accepte\"\r\n          declineButtonText=\"Je refuse\"\r\n          expires={30}\r\n          enableDeclineButton\r\n          onDecline={() => {\r\n            alert(\r\n              \"Le refus de nos cookies vous permets tout de même une bonne navigation sur notre site. A bientot :)\"\r\n            );\r\n          }}\r\n          cookieName=\"Tipourboire\"\r\n          style={{ background: \"#ffffff\", color: \"#555\" }}\r\n          declineButtonStyle={{\r\n            borderRadius: 12,\r\n            padding: 8,\r\n            color: \"#fff\",\r\n            fontSize: \"18px\",\r\n            background: \"#f5a624\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n          buttonStyle={{\r\n            borderRadius: 12,\r\n            padding: 8,\r\n            color: \"#fff\",\r\n            fontSize: \"18px\",\r\n            background: \"#f5a624\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n          style={{\r\n            fontSize: \"20px\",\r\n            fontfamily: \"Montserrat\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          Le Site Tipourboire utilise différents cookies afin d’améliorer ses\r\n          services et effectuer des suivis d’audience. Certains cookies sont\r\n          indispensables au fonctionnement du Site. Vous pouvez accepter ces\r\n          cookies, les refuser, ou gérer vos préférences. Vous pouvez consulter\r\n          notre{\" \"}\r\n          <a\r\n            href=\"/cookies/POLITIQUE_DE_COOKIES.pdf\"\r\n            target=\"_blank\"\r\n            style={{\r\n              fontSize: \"20px\",\r\n              fontfamily: \"Montserrat\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Politique de cookies\r\n          </a>\r\n        </CookieConsent>\r\n        <Row>\r\n          <Col>\r\n            <h1>Déja membre ? </h1>\r\n            <h1>Connectez-vous !</h1>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre e-mail\"\r\n            id=\"email\"\r\n            onChange={this.change}\r\n            value={this.state.email}\r\n          />\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre mot de passe\"\r\n            id=\"password\"\r\n            onChange={this.change}\r\n            value={this.state.password}\r\n          />\r\n        </Form.Group>\r\n        <Col className=\"colMdp\" xs={12} md={12}>\r\n          <Link className=\"forgetpwd\" to=\"/passwordReset\">\r\n            <p>Mot de passe oublié ?</p>\r\n          </Link>\r\n        </Col>\r\n        <Col md={12} className=\"blocCompte\">\r\n          <Button className=\"connectButton\" onClick={this.loginClient}>\r\n            Se connecter\r\n          </Button>\r\n          <p>{this.state.message}</p>\r\n        </Col>\r\n        <Col className=\"alignRight\">\r\n          <Form.Label className=\"text2\">\r\n            Pas encore membre ?{\" \"}\r\n            <Link className=\"creerCompte\" to=\"/Inscription\">\r\n              Créer mon compte\r\n            </Link>\r\n          </Form.Label>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component } from \"react\";\r\n//import Navbar from \"../../assets/components/Navbar/Navbar\";\r\n//import Historique from \"../Historique/Historique\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n//import Historique from \"../Historique/Historique\";\r\n\r\n/*style import*/\r\nimport \"./profil.css\";\r\n\r\nclass Client extends Component {\r\n  constructor(props) {\r\n    console.log();\r\n    super(props);\r\n    this.state = {\r\n      client: { historique: [] },\r\n    };\r\n  }\r\n  click = () => {\r\n    this.props.history.push({\r\n      pathname: \"/ListeServeurs\",\r\n    });\r\n  };\r\n\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  deleteClient = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n\r\n    e.preventDefault();\r\n    const data = {\r\n      userId:\r\n        localStorage.getItem(\r\n          \"userID\"\r\n        ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      client: this.state.client,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n      /**\"Bearer Token\" est un JSON Web Token dont le rôle est d'indiquer que l'utilisateur \r\n       qui accède aux ressources est bien authentifié. */\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/Home\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  signOut = () => {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"blocprincipalProfil \">\r\n        <Button\r\n          className=\"buttontip\"\r\n          variant=\"warning\"\r\n          size=\"sm\"\r\n          onClick={this.click}\r\n        >\r\n          POURBOIRE\r\n        </Button>\r\n        <Row>\r\n          <Col>\r\n            <h1 className=\"Titre-profil\">Mon Profil Client</h1>\r\n            <div className=\"infoProfil\">\r\n              <p>\r\n                {this.state.client.firstname} {this.state.client.lastname}\r\n              </p>\r\n              <p className=\"profilPara\">{this.state.client.adress}</p>\r\n              <p className=\"profilPara\">{this.state.client.phone}</p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col s={12} xs={12} md={6}>\r\n            <Link\r\n              to={\"/modifierMonProfil\" + window.location.search}\r\n              className=\"modif\"\r\n            >\r\n              <Button className=\"buttonedit\" type=\"submit\">\r\n                Mettre à jour mon profil\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <Col s={12} xs={12} md={6}>\r\n            <Link\r\n              to={\"/ListeServeurs\" + window.location.search}\r\n              className=\"modif\"\r\n            >\r\n              <Button className=\"buttonedit\" type=\"submit\">\r\n                Donner un pourboire\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <Col s={12} xs={12} md={6}>\r\n            <Link to={\"/Historique\" + window.location.search} className=\"modif\">\r\n              <Button className=\"buttonedit\" type=\"submit\">\r\n                Historique de mes dons\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n          <Col s={12} xs={12} md={6}>\r\n            <div className=\"Titre\">\r\n              <Button\r\n                className=\"buttondeco\"\r\n                variant=\"outline-warning\"\r\n                type=\"submit\"\r\n                onClick={this.signOut}\r\n              >\r\n                Se déconnecter\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <p>{this.state.message}</p>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Client;\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Modal,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\n\r\nclass footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModal: false,\r\n    };\r\n  }\r\n\r\n  deleteProfil = (e) => {\r\n    const data = {\r\n      userId:\r\n        localStorage.getItem(\r\n          \"userID\"\r\n        ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        () => {\r\n          let link = \"https://client.tipourboire.com/\";\r\n          window.location.href = link;\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  modalDelete = () => {\r\n    return (\r\n      <Modal\r\n        show={this.state.showModal}\r\n        onHide={() => {\r\n          this.setState({ showModal: false });\r\n        }}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"modalTitle\">Supprimer mon compte</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"modalBody\">\r\n          Etes vous sur de vouloir supprimer votre compte Tipourboire ?{\" \"}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            className=\"modalButtonDelete\"\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              this.deleteProfil();\r\n            }}>\r\n            Supprimer\r\n          </Button>\r\n          <Button\r\n            className=\"modalButtonDelete\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.setState({ showModal: false });\r\n            }}>\r\n            Annuler\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        {this.modalDelete()}\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"mentionsLegales/mentionsLégales.pdf\"\r\n                className=\"textFooter\">\r\n                Mentions Légales\r\n              </Nav.Link>\r\n              <Nav.Link href=\"cgu-cgv/CGA.pdf\" className=\"textFooter\">\r\n                CGA\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"confidentialité/Politique_de_confidentialité_client.pdf\"\r\n                className=\"textFooter\">\r\n                Confidentialité\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"\"\r\n                className=\"textFooter\"\r\n                href=\"cookies/POLITIQUE_DE_COOKIES.pdf\">\r\n                Cookies\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\">\r\n                Contact\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                className=\"textFooter\"\r\n                onClick={() => this.setState({ showModal: true })}>\r\n                Supprimer mon compte\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              <Nav.Link eventKey={2} href=\"#memes\" className=\"textFooter\">\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n            <img className=\"imgMango\" src=\"/logoTTT/mangopay-terms.png\" />\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default footer;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./HomePageClient.css\";\r\n\r\nclass HomePageClient extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"ContainerHome\">\r\n        <Row className=\"blocHome\">\r\n          <Col xs={12} md={6}>\r\n            <h1>Donner un Tip</h1>\r\n            <h2>Sans compte client</h2>\r\n            <p>Donner un pourboire sans créer de compte</p>\r\n            <Link to={\"/ListeServeurs\" + window.location.search}>\r\n              <Button className=\"rowButton\">Donner un pourboire</Button>\r\n            </Link>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <h1>Donner un Tip</h1>\r\n            <h2>Avec compte client</h2>\r\n            <p>Me connecter à mon espace Tipourboire</p>\r\n            <Link to={\"/\" + window.location.search}>\r\n              <Button className=\"rowButton\">Donner un pourboire</Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePageClient;\r\n","/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./Cards.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction CardSection() {\r\n  return (\r\n    <label>\r\n      Card details\r\n      <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default CardSection;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport Cards from \"../../assets/components/Cards/Cards\";\r\nimport \"./listeServeurs.css\";\r\n\r\nclass Liste extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serveur: { tabServeur: [] } };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataServeurs();\r\n  }\r\n\r\n  getDataServeurs = (e) => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/client/getDataServeur\" +\r\n        window.location.search,\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          this.setState({ serveur: data });\r\n          console.log(this.state.serveur.pourboireGeneral);\r\n          localStorage.setItem(\"restaurantName\", data.restaurantName);\r\n          localStorage.setItem(\"@idRestaurant\", data._id);\r\n          console.log(data);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  display = () => {\r\n    if (this.state.serveur.pourboireIndividuel === true) {\r\n      return this.state.serveur.tabServeur.map((element, index) => {\r\n        return (\r\n          <Container fluid>\r\n            <Row className=\"rowImage\">\r\n              <Col>\r\n                <Image\r\n                  src={\r\n                    \"https://s3.amazonaws.com/b.c.bucket.tipourboire/\" +\r\n                    element.serveurPicture\r\n                  }\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"rowTitre2\">\r\n              <Col s={12}>\r\n                <p>{element.serveurName}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"butTips\">\r\n              <Col>\r\n                <Button\r\n                  onClick={() => {\r\n                    localStorage.setItem(\"@mailServeur\", element.serveurMail);\r\n                    this.props.history.push(\r\n                      \"/information-client\" + window.location.search\r\n                    );\r\n                  }}\r\n                >\r\n                  Donner un Pourboire\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        );\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  displayGeneral = () => {\r\n    if (\r\n      this.state.serveur.pourboireGeneral === true &&\r\n      this.state.serveur.pourboireIndividuel === false\r\n    ) {\r\n      return (\r\n        <Container className=\"tipsTrueFalse\">\r\n          <Row>\r\n            <Col className=\"colButton\">\r\n              <Button\r\n                onClick={() => {\r\n                  const headers = new Headers({\r\n                    \"Content-Type\": \"application/json\",\r\n                  });\r\n                  const data = {};\r\n                  const options = {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                  };\r\n\r\n                  fetch(\r\n                    \"https://back-end.osc-fr1.scalingo.io/client/emailServeur\",\r\n                    options\r\n                  )\r\n                    .then((response) => {\r\n                      return response;\r\n                    })\r\n                    .then(\r\n                      (data) => {\r\n                        console.log(data);\r\n                      },\r\n\r\n                      (error) => {\r\n                        console.log(error);\r\n                      }\r\n                    );\r\n                  this.props.history.push(\r\n                    \"/TipCommun\" + window.location.search\r\n                  );\r\n                }}\r\n              >\r\n                Donner à toute l'équipe !\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          {this.state.serveur.tabServeur.map((element, index) => {\r\n            return (\r\n              <Container fluid>\r\n                <Row className=\"rowImage\">\r\n                  <Col>\r\n                    <Image\r\n                      src={\r\n                        \"https://s3.amazonaws.com/b.c.bucket.tipourboire/\" +\r\n                        element.serveurPicture\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"rowTitre2\">\r\n                  <Col s={12}>\r\n                    <p>{element.serveurName}</p>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            );\r\n          })}\r\n        </Container>\r\n      );\r\n    } else if (\r\n      this.state.serveur.pourboireGeneral === true &&\r\n      this.state.serveur.pourboireIndividuel === true\r\n    ) {\r\n      return (\r\n        <Container>\r\n          <Row>\r\n            {\" \"}\r\n            <Col className=\"colButton\">\r\n              <Button\r\n                onClick={() => {\r\n                  const headers = new Headers({\r\n                    \"Content-Type\": \"application/json\",\r\n                  });\r\n                  const data = {};\r\n                  const options = {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                  };\r\n\r\n                  fetch(\r\n                    \"https://back-end.osc-fr1.scalingo.io/client/emailServeur\",\r\n                    options\r\n                  )\r\n                    .then((response) => {\r\n                      return response;\r\n                    })\r\n                    .then(\r\n                      (data) => {\r\n                        console.log(data);\r\n                      },\r\n\r\n                      (error) => {\r\n                        console.log(error);\r\n                      }\r\n                    );\r\n                  this.props.history.push(\r\n                    \"/TipCommun\" + window.location.search\r\n                  );\r\n                }}\r\n              >\r\n                Donner à toute l'équipe !\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          {this.state.serveur.tabServeur.map((element, index) => {\r\n            return (\r\n              <Container fluid>\r\n                <Row className=\"rowImage\">\r\n                  <Col>\r\n                    <Image\r\n                      src={\r\n                        \"https://s3.amazonaws.com/b.c.bucket.tipourboire/\" +\r\n                        element.serveurPicture\r\n                      }\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"rowTitre2\">\r\n                  <Col s={12}>\r\n                    <p>{element.serveurName}</p>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"butTips\">\r\n                  <Col>\r\n                    <Button\r\n                      onClick={() => {\r\n                        localStorage.setItem(\r\n                          \"@mailServeur\",\r\n                          element.serveurMail\r\n                        );\r\n                        this.props.history.push(\r\n                          \"/information-client\" + window.location.search\r\n                        );\r\n                      }}\r\n                    >\r\n                      Donner un Pourboire\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            );\r\n          })}\r\n        </Container>\r\n      );\r\n    } else {\r\n      return this.state.serveur.tabServeur.map((element, index) => {\r\n        return (\r\n          <Container fluid>\r\n            <Row className=\"rowImage\">\r\n              <Col>\r\n                <Image\r\n                  src={\r\n                    \"https://s3.amazonaws.com/b.c.bucket.tipourboire/\" +\r\n                    element.serveurPicture\r\n                  }\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"rowTitre2\">\r\n              <Col s={12}>\r\n                <p>{element.serveurName}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"butTips\">\r\n              <Col>\r\n                <Button\r\n                  onClick={() => {\r\n                    localStorage.setItem(\"@mailServeur\", element.serveurMail);\r\n                    this.props.history.push(\r\n                      \"/information-client\" + window.location.search\r\n                    );\r\n                  }}\r\n                >\r\n                  Donner un Pourboire\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"blocPrincipalClient\">\r\n        <Row className=\"vousEtes\">\r\n          <Col className=\"colLieu\" s={12}>\r\n            <img src=\"/logoTTT/map.png\" />\r\n            <h1 className=\"Titre\">\r\n              Lieu : {this.state.serveur.restaurantName}\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{this.displayGeneral()}</Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Liste;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Navbar.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Button,\r\n  NavLink,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n//import Deconnexion from \"../Deconnexion/Deconnexion\";\r\n\r\nclass BarreMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (this.props.login) {\r\n      return (\r\n        <Dropdown className=\"nav justify-content-right\">\r\n          <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n            <img src=\"/logoTTT/user.png\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href={\"/Profil\" + window.location.search}>\r\n              Mon profil\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                localStorage.clear();\r\n                this.props.setLogin(false);\r\n                this.props.history.push(\"/\");\r\n              }}\r\n              href=\"/\"\r\n            >\r\n              Deconnexion\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      );\r\n    } else {\r\n      return (\r\n        <Dropdown className=\"nav justify-content-right\">\r\n          <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n            <img src=\"/logoTTT/user.png\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n            <Dropdown.Item href=\"/Inscription\">Inscription</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.connect();\r\n    console.log(\"............\", this.props.login);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"partie1\">\r\n          {this.connect()}\r\n          <Col className=\"logoPartie1\" md={12}>\r\n            <img src=\"/logoTTT/logoJaune.png\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default BarreMenu;\r\n","import React, { Component } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport \"./checkoutForm.css\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_live_51HAxRlHoh2Vgz5Qdxu3AGz9GC1q2B453vaXplDn3J0Q5wXRCZqwkuoCG5O1Nsr1VsbNIHmjVWj7XJo9cZmljPw7L00wQbxBO6Y\"\r\n);\r\n\r\nclass CheckoutForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      amount: 0,\r\n      client: {},\r\n    };\r\n  }\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  app = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxiJHoh2Vgz5Qd1ZLHrP5G\", // Replace with the ID of your price\r\n          quantity: 10,\r\n        },\r\n      ],\r\n\r\n      mode: \"payment\",\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        10 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"https://client.tipourboire.com/ListeServeurs\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  app1 = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxiJHoh2Vgz5Qd1ZLHrP5G\", // Replace with the ID of your price\r\n          quantity: 2,\r\n        },\r\n      ],\r\n      mode: \"payment\",\r\n\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        2 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"https://client.tipourboire.com/ListeServeurs\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  app2 = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxiJHoh2Vgz5Qd1ZLHrP5G\", // Replace with the ID of your price\r\n          quantity: 5,\r\n        },\r\n      ],\r\n\r\n      mode: \"payment\",\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        5 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"https://client.tipourboire.com/ListeServeurs\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  appChoice = async (event) => {\r\n    if (this.state.amount <= 1) {\r\n      window.alert(\"Le montant minimum du tips doit être de 2 euros\");\r\n\r\n      return;\r\n    } else {\r\n      // When the customer clicks on the button, redirect them to Checkout.\r\n      const stripe = await stripePromise;\r\n      let amount = this.state.amount;\r\n      const { error } = await stripe.redirectToCheckout({\r\n        lineItems: [\r\n          {\r\n            price: \"price_1HlxiJHoh2Vgz5Qd1ZLHrP5G\", // Replace with the ID of your price\r\n            quantity: Number(amount),\r\n          },\r\n        ],\r\n        mode: \"payment\",\r\n\r\n        successUrl:\r\n          \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n          amount +\r\n          \"&mail=\" +\r\n          this.state.client.email +\r\n          \"&RN=\" +\r\n          localStorage.getItem(\"restaurantName\"),\r\n        cancelUrl: \"https://client.tipourboire.com/ListeServeurs\",\r\n      });\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `error.message`.\r\n    }\r\n  };\r\n  change = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"check\">\r\n        <div className=\"blocTips\">\r\n          <div className=\"allButton\">\r\n            <h1 className=\"titleTips\">Don Tipourboire</h1>\r\n            <Row className=\"RowPourboire\">\r\n              <Col>\r\n                <Button className=\"tipButton1\" onClick={this.app1}>\r\n                  2 €\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button className=\"tipButton2\" onClick={this.app2}>\r\n                  5 €\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button className=\"tipButton3\" onClick={this.app}>\r\n                  10 €\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <h1 className=\"amount\">Don libre</h1>\r\n          <Row>\r\n            <Col xs={12} s={12} md={12}>\r\n              <Form>\r\n                <Form.Group controlId=\"formGroupAmount\">\r\n                  <Form.Control\r\n                    name=\"amount\"\r\n                    type=\"number\"\r\n                    placeholder=\"Montant\"\r\n                    onChange={this.change}\r\n                    value={this.state.amount}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n          <p className=\"amountMsg\">\r\n            (Veuillez saisir uniquement des chiffres entiers)\r\n          </p>\r\n          <Button\r\n            className=\"validAmount\"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={this.appChoice}\r\n          >\r\n            Valider\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckoutForm;\r\n","import React, { Component } from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_live_51HAxRlHoh2Vgz5Qdxu3AGz9GC1q2B453vaXplDn3J0Q5wXRCZqwkuoCG5O1Nsr1VsbNIHmjVWj7XJo9cZmljPw7L00wQbxBO6Y\"\r\n);\r\n\r\nclass Payment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { _id: \"\" };\r\n  }\r\n\r\n  Nocompte = () => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <p>Tipourboire ne collecte aucune information</p>\r\n          <p>\r\n            <Link to={\"https://stripe.com/payment-terms/legal\"}>\r\n              CGU Stripe\r\n            </Link>\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    /* if (!this.props.serveurId) {\r\n      this.props.history.push(\"/home\");\r\n    }*/\r\n  }\r\n\r\n  componentDidMount() {\r\n    /* if (!this.props.serveurId) {\r\n      this.props.history.push(\"/home\");\r\n    }*/\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Elements stripe={stripePromise}>\r\n          <CheckoutForm />\r\n        </Elements>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Payment;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Button, Card, Row, Col } from \"react-bootstrap\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"./DailyMenu.css\";\r\n\r\nclass DailyMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      db1: {},\r\n      menu: \"\",\r\n    };\r\n  }\r\n\r\n  getDailyMenu = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/client/menu\" +\r\n        window.location.search,\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          let db = data;\r\n          this.setState({ db1: db });\r\n          this.setState({ menu: this.state.db1.menu.dailyMenu.picture });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDailyMenu();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"blocprincipal\">\r\n        <Card>\r\n          <h2 className=\"Titre\">MENU DU JOUR</h2>\r\n          <h2 className=\"Titre\">{this.state.db1.restaurantName}</h2>\r\n\r\n          <Card.Body>\r\n            <p className=\"datemenu\"></p>\r\n          </Card.Body>\r\n          <a\r\n            href={\r\n              \"https://s3.amazonaws.com/b.c.bucket.tipourboire/\" +\r\n              this.state.menu\r\n            }\r\n            target=\"_blank\"\r\n          >\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={\r\n                \"https://s3.amazonaws.com/b.c.bucket.tipourboire/\" +\r\n                this.state.menu\r\n              }\r\n              className=\"dailyMenu\"\r\n              alt=\"Menu du Jour\"\r\n            />\r\n          </a>\r\n        </Card>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Link to={\"/Home\" + window.location.search}>\r\n              <Button className=\"button\" variant=\"outline-warning\" size=\"lg\">\r\n                Je donne un pourboire\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyMenu;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return <DailyMenu />;\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/password-renew\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button className=\"renewButton\">Valider</Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/password-reset\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n                <button className=\"resetButton\">Confirmer</button>\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport React, { Component } from \"react\";\r\nimport \"./Commentaire.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Commentaires extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { commentaires: [{ nom: \"\", prenom: \"\", texte: \"\" }] };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addNewStatut = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      prenom: this.state.prenom,\r\n      nom: this.state.nom,\r\n      texte: this.state.texte,\r\n      id: this.props.serveurId,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/commentaire\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n\r\n          this.props.history.push({\r\n            state: {\r\n              serveurId: this.props.id,\r\n            },\r\n            pathname: \"/menu\" + window.location.search,\r\n          });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"contCom\">\r\n        <Row className=\"coms\">\r\n          <Col xs={12} s={12} md={12}>\r\n            <h1 className=\"titreCom\">Laissez un commentaire à votre serveur</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"coms\">\r\n          <Col xs={12} s={12} md={12}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                onChange={this.handleInput}\r\n                value={this.state.prenom}\r\n                name=\"prenom\"\r\n                type=\"text\"\r\n                placeholder=\"Mon prénom\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                onChange={this.handleInput}\r\n                value={this.state.nom}\r\n                name=\"nom\"\r\n                type=\"text\"\r\n                placeholder=\"Mon nom\"\r\n              />\r\n            </Form.Group>\r\n            <textarea\r\n              onChange={this.handleInput}\r\n              value={this.state.texte}\r\n              name=\"texte\"\r\n              type=\"text\"\r\n              class=\"form-control formCommentaire\"\r\n              placeholder=\"Votre commentaire\"\r\n            ></textarea>\r\n          </Col>\r\n\r\n          <Col>\r\n            <button\r\n              className=\"buttonStatut\"\r\n              type=\"submit\"\r\n              onClick={this.addNewStatut}\r\n            >\r\n              Publier\r\n            </button>\r\n          </Col>\r\n          <Col className=\"caract\">\r\n            <small>100 caractères maximum</small>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Commentaires;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./historique.css\";\r\n\r\nclass Historique extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client: { historique: [] },\r\n    };\r\n  }\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  display = () => {\r\n    return this.state.client.historique.map((element, index) => {\r\n      return (\r\n        <tr>\r\n          <td type=\"text\" id=\"montant\" name=\"montant\">\r\n            {\" \"}\r\n            {element.montant / 100}€\r\n          </td>\r\n          <td type=\"date\" id=\"date\" name=\"date\">\r\n            {\" \"}\r\n            {new Date(element.date).toLocaleDateString()}\r\n          </td>\r\n          <td type=\"text\" id=\"waiter\" name=\"waiter\">\r\n            {\" \"}\r\n            {element.waiter}\r\n          </td>\r\n          <td type=\"text\" id=\"restaurantName\" name=\"restaurantName\">\r\n            {\" \"}\r\n            {element.restaurantName}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"histoClient\">\r\n        <Row>\r\n          <Col className=\"titleHisto\">\r\n            {\" \"}\r\n            <h3>Historique de vos pourboires</h3>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row class=\"table-responsive\">\r\n          <Table striped hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Montant</th>\r\n                <th>Date</th>\r\n                <th>Serveur</th>\r\n                <th>Restaurant</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.display()}</tbody>\r\n          </Table>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Historique;\r\n","import React, { Component } from \"react\";\r\nimport \"./modifierSonProfil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nclass modifierMonProfil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client: {},\r\n    };\r\n  }\r\n\r\n  change = (event) => {\r\n    let client = this.state.client;\r\n    client[event.target.name] = event.target.value;\r\n    this.setState({\r\n      client: client,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  editClient = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      client: this.state.client,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/edit\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  \r\n\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bloc-modifierProfil\">\r\n        <Row>\r\n          <Col md={12} className=\"titreModif\">\r\n       \r\n          <h1>Modification du profil</h1>\r\n        \r\n        \r\n        <Form>\r\n          <Form.Group controlId=\"formGroupName\">\r\n            \r\n            <Form.Control\r\n              name=\"lastname\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.change}\r\n              value={this.state.client.lastname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPrenom\">\r\n         \r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.change}\r\n              value={this.state.client.firstname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formAdresse\">\r\n            \r\n            <Form.Control\r\n              as=\"select\"\r\n              type=\"text\"\r\n              placeholder=\"Sexe\"\r\n              name=\"gender\"\r\n              onChange={this.change}\r\n              value={this.state.client.gender}\r\n            >\r\n            <option>-</option>\r\n            <option>Femme</option>\r\n            <option>Homme</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formVille\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ville\"\r\n              name=\"adress\"\r\n              onChange={this.change}\r\n              value={this.state.client.adress}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formTel\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Telephone(Facultatif)\"\r\n              name=\"phone\"\r\n              onChange={this.change}\r\n              value={this.state.client.phone}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formAge\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Age\"\r\n              name=\"age\"\r\n              onChange={this.change}\r\n              value={this.state.client.age}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n        <Button\r\n          className=\"submitButton\"\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={this.editClient}\r\n        >\r\n          Mettre à jour mon profil\r\n        </Button>\r\n        <br/>\r\n        {this.state.message}\r\n        </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default modifierMonProfil;\r\n","import React, { Component } from \"react\";\r\n\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./TipCommun.css\";\r\n\r\nclass TipCommun extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  postInfoCard = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data = {\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      email: this.state.email,\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/TipUser\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        localStorage.setItem(\"@data\", JSON.stringify(data));\r\n        localStorage.setItem(\"@dataFirstName\", this.state.firstname);\r\n        localStorage.setItem(\"@dataLastName\", this.state.lastname);\r\n        localStorage.setItem(\"@dataMail\", this.state.email);\r\n      });\r\n    this.props.history.push(\"/TipCommun1\" + window.location.search);\r\n  };\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Container className=\"mainBlocCommun\">\r\n        <Row>\r\n          <Col className=\"blocCommun\" xs={12} s={12} md={12}>\r\n            <p className=\"titleCommun\">Information client</p>\r\n          </Col>\r\n          <Col className=\"formCommun\" xs={12} s={12} md={12}>\r\n            <Form className=\"formCommun\">\r\n              <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\r\n                <Form.Control\r\n                  className=\"formMail\"\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  placeholder=\"E-Mail\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.email}\r\n                  className=\"inputPaymentTips\"\r\n                />\r\n                <Form.Control\r\n                  name=\"lastname\"\r\n                  type=\"text\"\r\n                  placeholder=\"Nom\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.lastname}\r\n                  className=\"inputPaymentTips\"\r\n                />\r\n                <Form.Control\r\n                  name=\"firstname\"\r\n                  type=\"text\"\r\n                  placeholder=\"Prénom\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.firstname}\r\n                  className=\"inputPaymentTips\"\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <img\r\n              className=\"mangoImgResp mangoImgNormal\"\r\n              src=\"/logoTTT/mangoPay.png\"\r\n            />\r\n          </Col>\r\n          <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\r\n            <Button className=\"communButton\" onClick={this.postInfoCard}>\r\n              Continuer vers la page de paiement\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TipCommun;\r\n","import React, { Component, useEffect, useState, useRef } from \"react\";\r\n\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Overlay from \"react-bootstrap/Overlay\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport { MdInfoOutline as Info } from \"react-icons/md\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport qs from \"qs\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./TipCommun1.css\";\r\nimport { Alert } from \"bootstrap\";\r\n\r\nfunction Icon() {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => setShow(!show)}\r\n        style={{\r\n          backgroundColor: \"rgba(52, 52, 52, 0.0)\",\r\n          borderColor: \"rgba(52, 52, 52, 0.0)\",\r\n        }}\r\n        ref={target}\r\n      >\r\n        <Info style={{ color: \"black\" }} />\r\n      </button>\r\n      <Overlay target={target.current} show={show} placement=\"right\">\r\n        {(props) => (\r\n          <Popover id=\"popover-basic\" {...props}>\r\n            <Popover.Title as=\"h3\" style={{ textAlign: \"center\" }}>\r\n              Paiements sécurisés\r\n            </Popover.Title>\r\n            <Popover.Content style={{ textAlign: \"left\" }}>\r\n              Tous les paiements effectués sur Tipourboire sont cryptés. <br />\r\n              Ils sont gérés par MangoPay, notre partenaire de confiance.\r\n              <br /> Leur technologie sécurisée nous permet d'être assurés que\r\n              le montant reglé pour une transaction est bien envoyé et reçu par\r\n              le(s) serveur(s).\r\n            </Popover.Content>\r\n          </Popover>\r\n        )}\r\n      </Overlay>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n  const history = useHistory();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  let amount = localStorage.getItem(\"amount\");\r\n  let dataMango = JSON.parse(localStorage.getItem(\"@data\"));\r\n  return (\r\n    <Modal {...props} centered backdrop=\"static\">\r\n      <Modal.Header style={{ borderBlockColor: \"#f5a624\" }}>\r\n        <img style={{ width: 150, height: 150 }} src=\"/logoTTT/icone.png\" />\r\n        <h3 style={{ marginTop: 20, textAlign: \"center\", color: \"#f5a624\" }}>\r\n          Tipourboire le pourboire digital !\r\n        </h3>\r\n      </Modal.Header>\r\n\r\n      <h3 style={{ textAlign: \"center\", marginTop: 25 }}>\r\n        Récapitulatif du pourboire\r\n      </h3>\r\n\r\n      <Modal.Body>\r\n        <p>\r\n          Montant du pourboire: {amount} €\r\n          <br />\r\n          Protection Bonne Attribution: {amount * 0.016 + 0.1} €\r\n          <Icon />\r\n          <br />\r\n          <p style={{ fontWeight: \"bolder\" }}>\r\n            Total prélevé: {Number(amount) + (Number(amount) * 0.016 + 0.1)} €\r\n          </p>\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Title id=\"contained-modal-title-center\">\r\n        <h3 style={{ textAlign: \"center\" }}>Information de facturation</h3>\r\n      </Modal.Title>\r\n      <Modal.Body>\r\n        <p>\r\n          <br />\r\n          Prénom : {localStorage.getItem(\"@dataFirstName\")}\r\n          <br />\r\n          Nom: {localStorage.getItem(\"@dataLastName\")}\r\n          <br />\r\n          E-mail: {localStorage.getItem(\"@dataMail\")}\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer style={{ borderBlockColor: \"#f5a624\" }}>\r\n        <Button\r\n          className=\"buttonModalPayout\"\r\n          onClick={() => {\r\n            axios({\r\n              method: \"post\",\r\n              url: dataMango.CardRegistrationURL,\r\n              data: qs.stringify({\r\n                cardRegistrationId: dataMango.Id,\r\n                accessKeyRef: dataMango.AccessKey,\r\n                data: dataMango.PreregistrationData,\r\n                cardNumber: localStorage.getItem(\"cardNumber\"),\r\n                cardExpirationDate: localStorage\r\n                  .getItem(\"expDate\")\r\n                  .replace(/[^a-zA-Z0-9]/g, \"\"),\r\n                cardCvx: localStorage.getItem(\"cvx\"),\r\n              }),\r\n              headers: {\r\n                \"content-type\":\r\n                  \"application/x-www-form-urlencoded;charset=utf-8\",\r\n              },\r\n            }).then((result) => {\r\n              const headers = new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n              });\r\n              const data1 = {\r\n                walletID: localStorage.getItem(\"walletID\"),\r\n                amount: Number(amount) + (Number(amount) * 0.016 + 0.1),\r\n                cardRegistrationId: dataMango.Id,\r\n                registrationData: result.data,\r\n              };\r\n              const options = {\r\n                method: \"POST\",\r\n                headers: headers,\r\n                body: JSON.stringify(data1),\r\n              };\r\n\r\n              fetch(\r\n                \"https://back-end.osc-fr1.scalingo.io/client/payin\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response.json();\r\n                })\r\n                .then((result1) => {\r\n                  if (result1.Type === \"param_error\") {\r\n                    window.alert(\r\n                      \"Une erreur s'est produite, veuillez vérifier le format de votre date d'expiration MM/AA : (ex : 06/22).\"\r\n                    );\r\n                    setShow(false);\r\n                  } else {\r\n                    window.confirm(\r\n                      \"Merci pour votre pourboire. À bientôt dans nos restaurants partenaires.\"\r\n                    );\r\n                    history.push(\"/Menu\" + window.location.search);\r\n                  }\r\n                });\r\n            });\r\n          }}\r\n          style={{ backgroundColor: \"#f5a624\", border: \"none\" }}\r\n        >\r\n          Payer\r\n        </Button>\r\n        <Button\r\n          className=\"buttonModalPayout\"\r\n          style={{ backgroundColor: \"#f5a624\", border: \"none\" }}\r\n          onClick={props.onHide}\r\n        >\r\n          Annuler\r\n        </Button>\r\n        <img className=\"imgMango\" src=\"/logoTTT/mangoPay.png\" />\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nclass TipCommun1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: {}, resultat: {}, walletID: \"\", modal: false };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  payin = () => {};\r\n  getWalletId = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data1 = {\r\n      _id: localStorage.getItem(\"@idRestaurant\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data1),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getWalletId\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        this.setState({ walletID: result });\r\n        this.setState({ message: result.message });\r\n        localStorage.setItem(\"walletID\", result);\r\n        console.log(result.ResultMessage);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWalletId();\r\n    console.log(\"JSON\");\r\n    this.setState({ data: JSON.parse(localStorage.getItem(\"@data\")) });\r\n    console.log(JSON.parse(localStorage.getItem(\"@data\")));\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"mainBlocCommun\">\r\n        <Row>\r\n          <Col className=\"blocCommun\" xs={12} s={12} md={12}>\r\n            <p className=\"titleCommun\">Paiement du pourboire</p>\r\n            <h5 className=\"tipsMin\">Le tips doit être de 2 euros minimum !</h5>\r\n          </Col>\r\n          <Col className=\"formCommun\" xs={12} s={12} md={12}>\r\n            <Form className=\"formCommun\">\r\n              <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  placeholder=\"Montant du Don Général\"\r\n                  onChange={this.handleInput}\r\n                  className=\"inputPaymentTips\"\r\n                />\r\n                <Form.Control\r\n                  name=\"cardNumber\"\r\n                  type=\"text\"\r\n                  placeholder=\"Numéro de carte bleu\"\r\n                  onChange={this.handleInput}\r\n                  className=\"inputPaymentTips\"\r\n                />\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Control\r\n                      name=\"cardExpirationDate\"\r\n                      type=\"text\"\r\n                      placeholder=\"MM/AA\"\r\n                      onChange={this.handleInput}\r\n                      className=\"inputPaymentTipsCol\"\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Control\r\n                      name=\"cardCvx\"\r\n                      type=\"text\"\r\n                      placeholder=\"CVC \"\r\n                      onChange={this.handleInput}\r\n                      className=\"inputPaymentTipsCol\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n              <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\r\n                <Button\r\n                  className=\"communButtonVal\"\r\n                  onClick={() => {\r\n                    if (this.state.amount <= 1) {\r\n                      window.alert(\r\n                        \"Le montant minimum du tips doit être de 2 euros\"\r\n                      );\r\n                    } else {\r\n                      this.setState({ modal: true });\r\n                      localStorage.setItem(\"amount\", this.state.amount);\r\n                      localStorage.setItem(\"cardNumber\", this.state.cardNumber);\r\n                      localStorage.setItem(\"cvx\", this.state.cardCvx);\r\n                      localStorage.setItem(\r\n                        \"expDate\",\r\n                        this.state.cardExpirationDate\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  Payer\r\n                </Button>\r\n                <img\r\n                  className=\"imgMango bottomMango\"\r\n                  src=\"/logoTTT/mangoPay.png\"\r\n                />\r\n              </Col>\r\n            </Form>\r\n          </Col>\r\n\r\n          <MyVerticallyCenteredModal\r\n            show={this.state.modal}\r\n            onHide={() => this.setState({ modal: false })}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TipCommun1;\r\n","import React, { Component } from \"react\";\n\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./tipsIndividuel.css\";\n\nclass TipIndividuel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  postInfoCard = () => {\n    const headers = new Headers({\n      \"Content-Type\": \"application/json\",\n    });\n    const data = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      email: this.state.email,\n    };\n    const options = {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(data),\n    };\n\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/TipUser\", options)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        localStorage.setItem(\"@dataIndiv\", JSON.stringify(data));\n        localStorage.setItem(\"@dataFirstNameIndiv\", this.state.firstname);\n        localStorage.setItem(\"@dataLastNameIndiv\", this.state.lastname);\n        localStorage.setItem(\"@dataMailIndiv\", this.state.email);\n      });\n    this.props.history.push(\n      \"/paiement-sécurisé-tipourboire\" + window.location.search\n    );\n  };\n  componentDidMount() {}\n  render() {\n    return (\n      <Container className=\"mainBlocCommun\">\n        <Row>\n          <Col className=\"blocCommun\" xs={12} s={12} md={12}>\n            <p className=\"titleCommun\">Information client</p>\n          </Col>\n          <Col className=\"formCommun\" xs={12} s={12} md={12}>\n            <Form className=\"formCommun\">\n              <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\n                <Form.Control\n                  className=\"formMail\"\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"E-Mail\"\n                  onChange={this.handleInput}\n                  value={this.state.email}\n                  className=\"inputPaymentTips\"\n                />\n                <Form.Control\n                  name=\"lastname\"\n                  type=\"text\"\n                  placeholder=\"Nom\"\n                  onChange={this.handleInput}\n                  value={this.state.lastname}\n                  className=\"inputPaymentTips\"\n                />\n                <Form.Control\n                  name=\"firstname\"\n                  type=\"text\"\n                  placeholder=\"Prénom\"\n                  onChange={this.handleInput}\n                  value={this.state.firstname}\n                  className=\"inputPaymentTips\"\n                />\n              </Form.Group>\n            </Form>\n            <img\n              className=\"mangoImgResp mangoImgNormal\"\n              src=\"/logoTTT/mangoPay.png\"\n            />\n          </Col>\n          <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\n            <Button className=\"communButton\" onClick={this.postInfoCard}>\n              Continuer vers la page de paiement\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default TipIndividuel;\n","import React, { Component, useEffect, useState, useRef } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport Overlay from \"react-bootstrap/Overlay\";\nimport Popover from \"react-bootstrap/Popover\";\nimport { MdInfoOutline as Info } from \"react-icons/md\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport qs from \"qs\";\nimport axios from \"axios\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./tipsIndividuel1.css\";\n\nfunction Icon() {\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n\n  return (\n    <>\n      <button\n        onClick={() => setShow(!show)}\n        style={{\n          backgroundColor: \"rgba(52, 52, 52, 0.0)\",\n          borderColor: \"rgba(52, 52, 52, 0.0)\",\n        }}\n        ref={target}\n      >\n        <Info style={{ color: \"black\" }} />\n      </button>\n      <Overlay target={target.current} show={show} placement=\"right\">\n        {(props) => (\n          <Popover id=\"popover-basic\" {...props}>\n            <Popover.Title as=\"h3\" style={{ textAlign: \"center\" }}>\n              Paiements sécurisés\n            </Popover.Title>\n            <Popover.Content style={{ textAlign: \"left\" }}>\n              Tous les paiements effectués sur Tipourboire sont cryptés. <br />\n              Ils sont gérés par MangoPay, notre partenaire de confiance.\n              <br /> Leur technologie sécurisée nous permet d'être assurés que\n              le montant reglé pour une transaction est bien envoyé et reçu par\n              le(s) serveur(s).\n            </Popover.Content>\n          </Popover>\n        )}\n      </Overlay>\n    </>\n  );\n}\n\nfunction MyVerticallyCenteredModal(props) {\n  const history = useHistory();\n\n  const [show, setShow] = useState(false);\n\n  let amount = localStorage.getItem(\"amountIndiv\");\n  let dataMango = JSON.parse(localStorage.getItem(\"@dataIndiv\"));\n  let protectionAmount = amount * 0.016 + 0.1;\n  let totalPreleve = Number(amount) + (Number(amount) * 0.016 + 0.1);\n  useEffect(() => {}, []);\n  return (\n    <Modal {...props} centered backdrop=\"static\">\n      <Modal.Header style={{ borderBlockColor: \"#f5a624\" }}>\n        <img style={{ width: 150, height: 150 }} src=\"/logoTTT/icone.png\" />\n        <h3 style={{ marginTop: 20, textAlign: \"center\", color: \"#f5a624\" }}>\n          Tipourboire le pourboire digital !\n        </h3>\n      </Modal.Header>\n\n      <h3 style={{ textAlign: \"center\", marginTop: 25 }}>\n        Récapitulatif du pourboire\n      </h3>\n\n      <Modal.Body>\n        <p>\n          Montant du pourboire: {amount} €\n          <br />\n          Protection Bonne Attribution: {protectionAmount.toFixed(2)} €\n          <Icon />\n          <br />\n          <p style={{ fontWeight: \"bolder\" }}>\n            Total prélevé: {totalPreleve.toFixed(2)} €\n          </p>\n        </p>\n      </Modal.Body>\n      <Modal.Title id=\"contained-modal-title-center\">\n        <h3 style={{ textAlign: \"center\" }}>Information de facturation</h3>\n      </Modal.Title>\n      <Modal.Body>\n        <p>\n          <br />\n          Prénom : {localStorage.getItem(\"@dataFirstNameIndiv\")}\n          <br />\n          Nom: {localStorage.getItem(\"@dataLastNameIndiv\")}\n          <br />\n          E-mail: {localStorage.getItem(\"@dataMailIndiv\")}\n        </p>\n      </Modal.Body>\n      <Modal.Footer style={{ borderBlockColor: \"#f5a624\" }}>\n        <Button\n          className=\"buttonModalPayout\"\n          onClick={() => {\n            axios({\n              method: \"post\",\n              url: dataMango.CardRegistrationURL,\n              data: qs.stringify({\n                cardRegistrationId: dataMango.Id,\n                accessKeyRef: dataMango.AccessKey,\n                data: dataMango.PreregistrationData,\n                cardNumber: localStorage.getItem(\"cardNumberIndiv\"),\n                cardExpirationDate: localStorage\n                  .getItem(\"expDateIndiv\")\n                  .replace(/[^a-zA-Z0-9]/g, \"\"),\n                cardCvx: localStorage.getItem(\"cvxIndiv\"),\n              }),\n              headers: {\n                \"content-type\":\n                  \"application/x-www-form-urlencoded;charset=utf-8\",\n              },\n            }).then((result) => {\n              const headers = new Headers({\n                \"Content-Type\": \"application/json\",\n              });\n              const data1 = {\n                emailServeur: localStorage.getItem(\"@mailServeur\"),\n                walletID: localStorage.getItem(\"walletIDIndiv\"),\n                amount: Number(amount) + (Number(amount) * 0.016 + 0.1),\n                cardRegistrationId: dataMango.Id,\n                registrationData: result.data,\n              };\n              const options = {\n                method: \"POST\",\n                headers: headers,\n                body: JSON.stringify(data1),\n              };\n\n              fetch(\n                \"https://back-end.osc-fr1.scalingo.io/client/payin-indiv\" +\n                  window.location.search,\n\n                options\n              )\n                .then((response) => {\n                  return response.json();\n                })\n                .then((result1) => {\n                  if (result1.Type === \"param_error\") {\n                    window.alert(\n                      \"Une erreur s'est produite, veuillez vérifier le format de votre date d'expiration MM/AA : (ex : 06/22).\"\n                    );\n                    setShow(false);\n                  } else {\n                    localStorage.clear();\n                    window.confirm(\n                      \"Merci pour votre pourboire. À bientôt dans nos restaurants partenaires.\"\n                    );\n                    history.push(\"/Commentaires\" + window.location.search);\n                  }\n                });\n            });\n          }}\n          style={{ backgroundColor: \"#f5a624\", border: \"none\" }}\n        >\n          Payer\n        </Button>\n        <Button\n          className=\"buttonModalPayout\"\n          style={{ backgroundColor: \"#f5a624\", border: \"none\" }}\n          onClick={props.onHide}\n        >\n          Annuler\n        </Button>\n        <img className=\"imgMango\" src=\"/logoTTT/mangoPay.png\" />\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nclass TipIndividuel1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { data: {}, resultat: {}, walletID: \"\", modal: false };\n  }\n\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  payin = () => {};\n  getWalletId = () => {\n    const headers = new Headers({\n      \"Content-Type\": \"application/json\",\n    });\n    const data1 = {\n      _id: localStorage.getItem(\"@idRestaurant\"),\n    };\n    const options = {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(data1),\n    };\n\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getWalletId\", options)\n      .then((response) => {\n        return response.json();\n      })\n      .then((result) => {\n        this.setState({ walletID: result });\n        this.setState({ message: result.message });\n        localStorage.setItem(\"walletIDIndiv\", result);\n      });\n  };\n\n  componentDidMount() {\n    //this.getWalletId();\n    //console.log(\"JSON\");\n    this.setState({ data: JSON.parse(localStorage.getItem(\"@data\")) });\n    //console.log(JSON.parse(localStorage.getItem(\"@data\")));\n  }\n  render() {\n    return (\n      <Container className=\"mainBlocCommun\">\n        <Row>\n          <Col className=\"blocCommun\" xs={12} s={12} md={12}>\n            <p className=\"titleCommun\">Paiement du pourboire</p>\n            <h5 className=\"tipsMin\">Le tips doit être de 2 euros minimum !</h5>\n          </Col>\n          <Col className=\"formCommun\" xs={12} s={12} md={12}>\n            <Form className=\"formCommun\">\n              <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\n                <Form.Control\n                  name=\"amount\"\n                  type=\"number\"\n                  placeholder=\"Montant du Don Général\"\n                  onChange={this.handleInput}\n                  className=\"inputPaymentTips\"\n                />\n                <Form.Control\n                  name=\"cardNumber\"\n                  type=\"text\"\n                  placeholder=\"Numéro de carte bleu\"\n                  onChange={this.handleInput}\n                  className=\"inputPaymentTips\"\n                />\n                <Row>\n                  <Col>\n                    <Form.Control\n                      name=\"cardExpirationDate\"\n                      type=\"text\"\n                      placeholder=\"MM/AA\"\n                      onChange={this.handleInput}\n                      className=\"inputPaymentTipsCol\"\n                    />\n                  </Col>\n                  <Col>\n                    <Form.Control\n                      name=\"cardCvx\"\n                      type=\"text\"\n                      placeholder=\"CVC \"\n                      onChange={this.handleInput}\n                      className=\"inputPaymentTipsCol\"\n                    />\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\n                <Button\n                  className=\"communButtonVal\"\n                  onClick={() => {\n                    if (this.state.amount <= 1) {\n                      window.alert(\n                        \"Le montant minimum du tips doit être de 2 euros\"\n                      );\n                    } else {\n                      this.setState({ modal: true });\n                      localStorage.setItem(\"amountIndiv\", this.state.amount);\n                      localStorage.setItem(\n                        \"cardNumberIndiv\",\n                        this.state.cardNumber\n                      );\n                      localStorage.setItem(\"cvxIndiv\", this.state.cardCvx);\n                      localStorage.setItem(\n                        \"expDateIndiv\",\n                        this.state.cardExpirationDate\n                      );\n                    }\n                  }}\n                >\n                  Payer\n                </Button>\n                <img\n                  className=\"imgMango bottomMango\"\n                  src=\"/logoTTT/mangoPay.png\"\n                />\n              </Col>\n            </Form>\n          </Col>\n\n          <MyVerticallyCenteredModal\n            show={this.state.modal}\n            onHide={() => this.setState({ modal: false })}\n          />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default TipIndividuel1;\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nclass MangoCards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <Form.Group controlId=\"formGroupAmount\">\r\n            <Form.Control\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"E-Mail\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"birthday\"\r\n              type=\"date\"\r\n              placeholder=\"Date de naissance\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MangoCards;\r\n","/**\r\n * App.js - Main app component\r\n */\r\n/* coucou*/\r\n/*Module imports*/\r\nimport React, { Component } from \"react\";\r\nimport Inscription from \"../Inscription/Inscription\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Connexion from \"../Connexion/Connexion\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Footer from \"../../assets/components/Footer/Footer\";\r\nimport HomePageClient from \"../HomePageClient/HomePageClient\";\r\nimport Liste from \"../ListeServeurs/ListeServeurs\";\r\nimport BarreMenu from \"../../assets/components/Navbar/Navbar\";\r\nimport Payment from \"../Payment/Payment\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\nimport Commentaires from \"../Payment/Commentaire\";\r\nimport Historique from \"../Historique/Historique\";\r\nimport modifierMonProfil from \"../modifierSonProfil/modifierSonProfil\";\r\nimport TipCommun from \"../TipCommun/TipCommun\";\r\nimport TipCommun1 from \"../TipCommun/TipCommun1\";\r\nimport TipIndividuel from \"../TipsIndividuel/tipsIndividuel\";\r\nimport TipIndividuel1 from \"../TipsIndividuel/tipsIndividuel1\";\r\nimport MangoCards from \"../MangoCards/MangoCards\";\r\n\r\n// Make sure to call loadStripe outside of a component’s render to avoid\r\n// recreating the Stripe object on every render.\r\n// loadStripe is initialized with a fake API key.\r\n// Sign in to see examples pre-filled with your key.\r\n\r\n/*Main app component*/\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <BarreMenu setLogin={this.setLogin} login={this.state.login} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route path=\"/Inscription\" exact component={Inscription} />\r\n            <Route path=\"/Profil\" exact component={Profil} />\r\n            <Route path=\"/Home\" exact component={HomePageClient} />\r\n            <Route path=\"/ListeServeurs\" exact component={Liste} />\r\n            <Route path=\"/Payment\" exact component={Payment} />\r\n            <Route path=\"/menu\" exact component={Menu} />\r\n            <Route path=\"/Commentaires\" exact component={Commentaires} />\r\n            <Route path=\"/passwordReset\" exact component={PasswordReset} />\r\n            <Route path=\"/passwordRenew\" exact component={PasswordRenew} />\r\n            <Route path=\"/Historique\" exact component={Historique} />\r\n            <Route path=\"/TipCommun\" exact component={TipCommun} />\r\n            <Route path=\"/TipCommun1\" exact component={TipCommun1} />\r\n            <Route path=\"/information-client\" exact component={TipIndividuel} />\r\n            <Route\r\n              path=\"/paiement-sécurisé-tipourboire\"\r\n              exact\r\n              component={TipIndividuel1}\r\n            />\r\n            <Route path=\"/MangoCards\" exact component={MangoCards} />\r\n            <Route\r\n              path=\"/modifierMonProfil\"\r\n              exact\r\n              component={modifierMonProfil}\r\n            />\r\n          </Switch>\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n/*import \"./index.css\";*/\r\nimport App from \"./components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}